USE sunbird;
/**
creation of id= one way hash of (userId##courseId) here courseId is identifier of course mgmt table
toc url we have to generate through json of content id from ekStep 
here status is (default(0),inProgress(1),completed(2))
progress is no of content completed
**/
CREATE TABLE IF NOT EXISTS sunbird.course_enrollment(id text, courseId text, courseName text,userId text,enrolledDate text,
description text,tocUrl text,status int,active boolean,delta text,grade text,progress int,lastReadContentId text,
lastReadContentStatus int,addedBy text,courseLogoUrl text,dateTime timestamp,contentId text,PRIMARY KEY (id));

CREATE INDEX inx_ce_userId ON sunbird.course_enrollment (userId);
CREATE INDEX inx_ce_courseId ON sunbird.course_enrollment (courseId);
CREATE INDEX inx_ce_course_name ON sunbird.course_enrollment (courseName);
CREATE INDEX inx_ce_status ON sunbird.course_enrollment (status);

/**
creation of id = one way hash of (userId##contentId##courseId##batchId)
status is (default(0),inProgress(1),completed(2))
**/
CREATE TABLE IF NOT EXISTS sunbird.content_consumption(id text, contentId text, courseId text, userId text,viewCount int,lastAccessTime text,
contentVersion text,completedCount int,status int,result text,score text,grade text,lastUpdatedTime text,lastCompletedTime text,dateTime timestamp,progress int,PRIMARY KEY (id));
CREATE INDEX inx_cc_userId ON sunbird.content_consumption (userId);
CREATE INDEX inx_cc_contentId ON sunbird.content_consumption (contentId);
CREATE INDEX inx_cc_status ON sunbird.content_consumption (status);
CREATE INDEX inx_cc_courseId ON sunbird.content_consumption (courseId);
/**
creation of id = using timestamp and env 
 id and courseId both are same
content id is from ekstep 
status DRAFT("draft"), LIVE("live"), RETIRED("retired")
contentType (pdf,video,word doc etc)
tutor   map<id,name>
**/      
CREATE TABLE IF NOT EXISTS sunbird.course_management(id text, courseId text, contentId text, courseName text,courseType text,
facultyId text,facultyName text,organisationId text,organisationName text,enrollementStartDate text,enrollementEndDate text,
courseDuration text,description text,status text,addedBy text,addedByName text,publishedBy text,publishedByName text,createdDate text,
publishedDate text,updatedDate text,updatedBy text,updatedByName text,contentType text,createdfor list<text>,noOfLectures int,tocUrl text,
tutor map<text,text>,courseLogoUrl text,courseRating text,userCount int,PRIMARY KEY (id));

CREATE INDEX inx_cm_facultyId ON sunbird.course_management (facultyId);
CREATE INDEX inx_cm_organisationId ON sunbird.course_management (organisationId);
CREATE INDEX inx_cm_courseId ON sunbird.course_management (courseId);
CREATE INDEX inx_cm_course_name ON sunbird.course_management (courseName);
CREATE INDEX inx_cm_status ON sunbird.course_management (status);
CREATE INDEX inx_cm_contentId ON sunbird.course_management (contentId);
/**
creation of id = one way hash of userName
here id and userId both are same
 currently username and email is same
email and username is unique
**/
CREATE TABLE IF NOT EXISTS  sunbird.user(id text,userId text,userName text, email text,phone text,createdDate text,updatedDate text,updatedBy text,
lastLoginTime text,status int,firstName text,lastName text,password text,avatar text,gender text,language list<text>,subject list<text>,grade list<text>,regOrgId text,
dob text,thumbnail text,rootOrgId text,loginId text,provider text,roles List<text>,profileSummary text,isDeleted boolean,createdBy text,location text,
webpages list<frozen <map<text,text>>>,tempPassword text,currentLoginTime text,tcstatus text,tcupdateddate text,profileVisibility map<text,text>,emailVerified boolean,countryCode text,PRIMARY KEY (id));

CREATE INDEX inx_u_email ON sunbird.user (email);
CREATE INDEX inx_u_phone ON sunbird.user (phone);
CREATE INDEX inx_u_status ON sunbird.user (status);
CREATE INDEX inx_u_userId ON sunbird.user (userId);
CREATE INDEX inx_u_userName ON sunbird.user (userName);
CREATE INDEX inx_u_loginId ON sunbird.user(loginId);

CREATE TABLE IF NOT EXISTS sunbird.user_auth(id text, userId text,createdDate text,updatedDate text,source text,PRIMARY KEY (id));
CREATE INDEX inx_ua_userId ON sunbird.user_auth (userId);
CREATE INDEX inx_ua_source ON sunbird.user_auth (source);

CREATE TABLE IF NOT EXISTS sunbird.organisation(id text, orgName text, description text,communityId text,createdBy text,createdDate text,
updatedDate text,updatedBy text,status int,parentOrgId text,orgType text,orgCode text,dateTime timestamp,imgUrl text,thumbnail text,channel text,preferredLanguage text,
homeUrl text,isRootOrg boolean,noOfmembers int,isApproved boolean,approvedBy text,approvedDate text,addressId text,rootOrgID text,externalId text,isDefault boolean,
 provider text,slug text,hashTagId text,theme text,contactDetail text,orgTypeId text,locationId text,PRIMARY KEY (id));

CREATE INDEX inx_org_orgName ON sunbird.organisation (orgName);
CREATE INDEX inx_org_channel ON sunbird.organisation(channel);
CREATE INDEX inx_org_orgType ON sunbird.organisation(orgType);
CREATE INDEX inx_org_orgCode ON sunbird.organisation(orgCode); 
CREATE INDEX inx_org_status ON sunbird.organisation (status);
CREATE INDEX inx_org_provider ON sunbird.organisation (provider);
CREATE INDEX inx_org_externalId ON sunbird.organisation (externalId);

INSERT INTO sunbird.organisation(id , isRootOrg , isDefault, status) values('ORG_001' , true , true, 1);
update organisation set channel='ROOT_ORG' where id='ORG_001';

CREATE TABLE IF NOT EXISTS sunbird.page_management(id text, name text, appMap text,portalMap text,createdDate text,createdBy text,
updatedDate text,updatedBy text,organisationId text,PRIMARY KEY (id));

CREATE INDEX inx_pm_pageName ON sunbird.page_management (name);
CREATE INDEX inx_vm_organisationId ON sunbird.page_management (organisationId);


CREATE TABLE IF NOT EXISTS sunbird.page_section(id text, name text, sectionDataType text,description text,display text,
searchQuery text,createdDate text,createdBy text,updatedDate text,updatedBy text,imgUrl text,alt text,status int,PRIMARY KEY (id));
CREATE INDEX inx_ps_sectionDataType ON sunbird.page_section (sectionDataType);
CREATE INDEX inx_ps_sectionName ON sunbird.page_section (name);


CREATE TABLE IF NOT EXISTS sunbird.assessment_eval(id text, contentId text, courseId text, userId text,
createdDate text,result text,score text,attemptId text,attemptedCount int,PRIMARY KEY (id));

CREATE INDEX inx_ae_userId ON sunbird.assessment_eval (userId);
CREATE INDEX inx_ae_contentId ON sunbird.assessment_eval (contentId);
CREATE INDEX inx_ae_courseId ON sunbird.assessment_eval (courseId);


CREATE TABLE IF NOT EXISTS sunbird.assessment_item(id text, contentId text, courseId text, userId text,assessmentItemId text,
assessmentType text,attemptedDate text,createdDate text,timeTaken int,result text,score text,maxScore text,answers text,
evaluationStatus boolean,processingStatus boolean,attemptId text,PRIMARY KEY (id));

CREATE INDEX inx_ai_userId ON sunbird.assessment_item (userId);
CREATE INDEX inx_ai_contentId ON sunbird.assessment_item (contentId);
CREATE INDEX inx_ai_assessmentItemId ON sunbird.assessment_item (assessmentItemId);
CREATE INDEX inx_ai_courseId ON sunbird.assessment_item (courseId);
CREATE TABLE IF NOT EXISTS sunbird.user_external_identity(id text, userId text, externalId text,isVerified boolean,provider text,externalIdValue text,idType text,PRIMARY KEY (id));
CREATE INDEX inx_uei_userid ON sunbird.user_external_identity (userId);
CREATE INDEX inx_uei_externalId ON sunbird.user_external_identity (externalId);
CREATE INDEX inx_uei_provider ON sunbird.user_external_identity (provider);
CREATE INDEX inx_uei_externalIdValue ON sunbird.user_external_identity (externalIdValue);

CREATE TABLE IF NOT EXISTS sunbird.address(id text, userId text, country text,state text,city text,zipCode text,addType text,createdDate text,createdBy text,updatedDate text,
updatedBy text,addressLine1 text,addressLine2 text,isDeleted boolean,PRIMARY KEY (id));
CREATE INDEX inx_add_userid ON sunbird.address (userId);
CREATE INDEX inx_add_addType ON sunbird.address (addType);

CREATE TABLE IF NOT EXISTS sunbird.user_education(id text, userId text, courseName text,duration int,yearOfPassing int,percentage double,grade text,name text,boardOrUniversity text,
addressId text,createdDate text,createdBy text,updatedDate text,updatedBy text,degree text,isDeleted boolean,PRIMARY KEY (id));
CREATE INDEX inx_ueu_userid ON sunbird.user_education (userId);

CREATE TABLE IF NOT EXISTS sunbird.user_job_profile(id text, userId text, jobName text,role text,joiningDate text,endDate text,orgName text,orgId text,subject list<text>,
addressId text,boardName text,isVerified boolean,isRejected boolean,verifiedDate text,verifiedBy text,createdDate text,createdBy text,updatedDate text,updatedBy text, 
isCurrentJob boolean,isDeleted boolean,PRIMARY KEY (id));
CREATE INDEX inx_ujp_userid ON sunbird.user_job_profile (userId); 

CREATE TABLE IF NOT EXISTS sunbird.user_org(id text, userId text, role list<text>,organisationid text,orgJoinDate text,orgLeftDate text,isApproved boolean,
isRejected boolean,approvedBy text,approvalDate text,updatedDate text,updatedBy text,addedby text,addedbyname text,isDeleted boolean,position text,PRIMARY KEY (id));
CREATE INDEX inx_uorg_userid ON sunbird.user_org(userId); 
CREATE INDEX inx_uorg_orgid ON sunbird.user_org (organisationid);
CREATE TABLE IF NOT EXISTS sunbird.subject(id text, name text, PRIMARY KEY (id));
CREATE INDEX inx_sb_name ON sunbird.subject(name); 

CREATE TABLE IF NOT EXISTS sunbird.org_type(id text, name text, PRIMARY KEY (id));
CREATE INDEX inx_ot_name ON sunbird.org_type(name);  

CREATE TABLE IF NOT EXISTS sunbird.org_mapping(id text, orgIdOne text,relation text,orgIdTwo text, PRIMARY KEY (id));
CREATE INDEX inx_om_orgIdOne ON sunbird.org_mapping(orgIdOne);  
CREATE INDEX inx_om_orgIdTwo ON sunbird.org_mapping(orgIdTwo);    
CREATE TABLE IF NOT EXISTS sunbird.master_action(id text, name text, PRIMARY KEY (id));
CREATE INDEX inx_ma_name ON sunbird.master_action(name); 

CREATE TABLE IF NOT EXISTS sunbird.action_group(id text, actionId list<text>,groupName text, PRIMARY KEY (id));
CREATE INDEX inx_uacg_groupName ON sunbird.action_group(groupName);
insert into sunbird.action_group(id,actionId,groupName) values ('ag_12',['1','2'],'SYSTEM_ADMINISTRATION');
insert into sunbird.action_group(id,actionId,groupName) values ('ag_13',['3','4','7','8','5'],'ORG_MANAGEMENT');	
insert into sunbird.action_group(id,actionId,groupName) values ('ag_14',['6','9','10'],'MEMBERSHIP_MANAGEMENT');	
insert into sunbird.action_group(id,actionId,groupName) values ('ag_15',['11','12','13','14'],'CONTENT_CREATION');
insert into sunbird.action_group(id,actionId,groupName) values ('ag_16',['15','16'],'CONTENT_REVIEW');	
insert into sunbird.action_group(id,actionId,groupName) values ('ag_17',['17','18','10'],'CONTENT_CURATION');		
insert into sunbird.action_group(id,actionId,groupName) values ('ag_17',['19','20','21','22','23','24','25','26'],'PUBLIC');

CREATE TABLE IF NOT EXISTS sunbird.user_action_role(id text, actionGroupId list<text>,roleId text, PRIMARY KEY (id));
CREATE INDEX inx_uactr_roleId ON sunbird.user_action_role(roleId);
insert into sunbird.user_action_role(id,actiongroupid,roleid) values ('uar_1',['ag_17'],'r_107');
insert into  sunbird.user_action_role(id,actiongroupid,roleid) values ('uar_2',['ag_13'],'r_102');
insert into  sunbird.user_action_role(id,actiongroupid,roleid) values ('uar_3',['ag_14'],'r_103');
insert into sunbird.user_action_role(id,actiongroupid,roleid) values ('uar_3',['ag_15'],'r_104');
insert into sunbird.user_action_role(id,actiongroupid,roleid) values ('uar_3',['ag_16'],'r_105');
insert into sunbird.user_action_role(id,actiongroupid,roleid) values ('uar_3',['ag_12'],'r_101');
  
 CREATE TABLE IF NOT EXISTS sunbird.role_group(id text, name text, url_action_ids list<text>,PRIMARY KEY (id));
 insert into sunbird.role_group (id,name) values ('SYSTEM_ADMINISTRATION','System Administration');
 insert into sunbird.role_group (id,name) values ('ORG_MANAGEMENT','Org Management');
 insert into sunbird.role_group (id,name) values ('MEMBERSHIP_MANAGEMENT','Membership Management');
 insert into sunbird.role_group (id,name) values ('CONTENT_CREATION','Content Creation');
 insert into sunbird.role_group (id,name) values ('CONTENT_CURATION','Content Curation');
 insert into sunbird.role_group (id,name) values ('CONTENT_REVIEW','Content Review');
 insert into sunbird.role_group (id,name) values ('COURSE_MENTOR','Course Mentor');
 insert into sunbird.role_group (id,name) values ('FLAG_REVIEWER ','Flag Reviewer');
 insert into sunbird.role_group (id,name) values ('COURSE_ADMIN','Course Admin');
 insert into sunbird.role_group (id,name) values ('COURSE_CREATOR','Course Creator');
 insert into sunbird.role_group (id,name) values ('PUBLIC','Public');
 insert into sunbird.role_group (id,name) values ('ANNOUNCEMENT_SENDER','Announcement Sender');
 update sunbird.role_group set url_action_ids=['addMember','removeMember','suspendMember'] where id='MEMBERSHIP_MANAGEMENT';
 update sunbird.role_group set url_action_ids=['createCourse','updateCourse','createContent','updateContent'] where id='CONTENT_CREATION';
 update sunbird.role_group set url_action_ids=['suspendOrg','suspendUser'] where id='SYSTEM_ADMINISTRATION';
 update sunbird.role_group set url_action_ids=['publishCourse','publishContent'] where id='CONTENT_REVIEW';
 update sunbird.role_group set url_action_ids=['createOrg','updateOrg','removeOrg','createUser','updateUser'] where id='ORG_MANAGEMENT';
 update sunbird.role_group set url_action_ids=['flagCourse','flagContent'] where id='CONTENT_CURATION';
 update sunbird.role_group set url_action_ids=['courseMentor'] where id='COURSE_MENTOR';
 update sunbird.role_group set url_action_ids=['suspendOrg','suspendUser','orgupload'] where id='SYSTEM_ADMINISTRATION';
 update sunbird.role_group set url_action_ids=['flagReview'] where id='FLAG_REVIEWER';
 update sunbird.role_group set url_action_ids=['courseAdmin'] where id='COURSE_ADMIN';
 update sunbird.role_group set url_action_ids=['courseCreator'] where id='COURSE_CREATOR';
 update sunbird.role_group set name='Flag Reviewer' where id='FLAG_REVIEWER';
 update sunbird.role_group set url_action_ids=['public'] where id='PUBLIC';
 update sunbird.role_group set url_action_ids=['Announcement Sender'] where id='ANNOUNCEMENT_SENDER';
 
CREATE TABLE IF NOT EXISTS sunbird.role(id text, name text,roleGroupId List<text>,status int, PRIMARY KEY (id));
CREATE INDEX inx_ro_master_name ON sunbird.role(name);
 insert into sunbird.role (id,name,rolegroupid,status) values ('ADMIN','Admin',['SYSTEM_ADMINISTRATION','ORG_MANAGEMENT'],1);
 insert into sunbird.role (id,name,rolegroupid,status) values ('ORG_ADMIN','Org Admin',['ORG_MANAGEMENT','MEMBERSHIP_MANAGEMENT'],1);
 insert into sunbird.role (id,name,rolegroupid,status) values ('ORG_MODERATOR','Org Moderator',['MEMBERSHIP_MANAGEMENT'],1);
 insert into sunbird.role (id,name,rolegroupid,status) values ('CONTENT_CREATOR','Content Creator',['CONTENT_CREATION'],1);
 insert into sunbird.role (id,name,rolegroupid,status) values ('CONTENT_REVIEWER','Content Reviewer',['CONTENT_CREATION','CONTENT_CURATION','CONTENT_REVIEW'],1);
 insert into sunbird.role (id,name,rolegroupid,status) values ('COURSE_MENTOR','Course Mentor',['COURSE_MENTOR'],1);
 insert into sunbird.role (id,name,rolegroupid,status) values ('FLAG_REVIEWER','Flag Reviewer',['FLAG_REVIEWER'],1);
 insert into sunbird.role (id,name,rolegroupid,status) values ('COURSE_ADMIN','Course Admin',['COURSE_ADMIN'],1);
 insert into sunbird.role (id,name,rolegroupid,status) values ('COURSE_CREATOR','Course Creator',['COURSE_CREATOR'],1);
 insert into sunbird.role (id,name,rolegroupid,status) values ('PUBLIC','Public',['PUBLIC'],1);
 insert into sunbird.role (id,name,rolegroupid,status) values ('ANNOUNCEMENT_SENDER','Announcement Sender',['ANNOUNCEMENT_SENDER'],1);

 CREATE TABLE IF NOT EXISTS sunbird.url_action(id text, url list<text>,name text, PRIMARY KEY (id));
 CREATE INDEX inx_ua_name ON sunbird.url_action(name);
 CREATE INDEX inx_ua_url ON sunbird.url_action(url);

 insert into sunbird.url_action (id,name) values ('suspendOrg','suspendOrg');
 insert into sunbird.url_action (id,name) values ('suspendUser','suspendUser');
 insert into sunbird.url_action (id,name) values ('createOrg','createOrg');
 insert into sunbird.url_action (id,name) values ('updateOrg','updateOrg');
 insert into sunbird.url_action (id,name) values ('removeOrg','removeOrg');
 insert into sunbird.url_action (id,name) values ('createUser','createUser');
 insert into sunbird.url_action (id,name) values ('updateUser','updateUser');
 insert into sunbird.url_action (id,name) values ('ORG_MANAGEMENT','Org Management');
 insert into sunbird.url_action (id,name) values ('createOrg','createOrg');
 insert into sunbird.url_action (id,name) values ('addMember','addMember');
 insert into sunbird.url_action (id,name) values ('removeMember','removeMember');
 insert into sunbird.url_action (id,name) values ('suspendMember','suspendMember');
 insert into sunbird.url_action (id,name) values ('createCourse','createCourse');
 insert into sunbird.url_action (id,name) values ('updateCourse','updateCourse');
 insert into sunbird.url_action (id,name) values ('createContent','createContent');
 insert into sunbird.url_action (id,name) values ('updateContent','updateContent');
 insert into sunbird.url_action (id,name) values ('flagCourse','flagCourse');
 insert into sunbird.url_action (id,name) values ('flagContent','flagContent');
 insert into sunbird.url_action (id,name) values ('publishCourse','publishCourse');
 insert into sunbird.url_action (id,name) values ('publishContent','publishContent');
 insert into sunbird.url_action (id,name) values ('orgupload','orgupload');
 insert into sunbird.url_action (id,name) values ('FLAG_REVIEWER','flag Review');
 update sunbird.url_action set url=['/v1/course/publish'] where id='publishContent';
 update sunbird.url_action set url=['/v1/user/create'] where id='addMember';
 update sunbird.url_action set url=['v1/course/create'] where id='createCourse';
 update sunbird.url_action set url=['/v1/user/create'] where id='createUser';
 update sunbird.url_action set url=['/v1/course/publish'] where id='publishCourse';
 update sunbird.url_action set url=['/v1/organisation/update'] where id='updateOrg';
 update sunbird.url_action set url=['/v1/org/suspend'] where id='suspendOrg';
 update sunbird.url_action set url=['/v1/user/block'] where id='suspendUser';
 update sunbird.url_action set url=['/v1/org/upload'] where id='orgupload';
/**
creation of id= one way hash of (userId##courseId##batchId) here courseId is identifier of EkStep course
toc url is generated from ekStep
here status is (default(0),inProgress(1),completed(2))
progress is no of content completed
**/
CREATE TABLE IF NOT EXISTS sunbird.user_courses(id text, courseId text, courseName text, userId text, batchId text, enrolledDate text,
description text,tocUrl text,status int,active boolean,delta text,grade text,progress int,lastReadContentId text,
lastReadContentStatus int,addedBy text,courseLogoUrl text, dateTime timestamp, contentId text, leafNodesCount int,PRIMARY KEY (id));

CREATE INDEX inx_ucs_userId ON sunbird.user_courses (userId);
CREATE INDEX inx_ucs_courseId ON sunbird.user_courses (courseId);
CREATE INDEX inx_ucs_batchId ON sunbird.user_courses (batchId);
CREATE INDEX inx_ucs_course_name ON sunbird.user_courses (courseName);
CREATE INDEX inx_ucs_status ON sunbird.user_courses (status);


ALTER TABLE sunbird.org_mapping ADD rootOrgID text;
CREATE TABLE IF NOT EXISTS sunbird.org_type(id text, name text,createdDate text,createdBy text,updatedDate text,updatedBy text,PRIMARY KEY (id));
CREATE TABLE IF NOT EXISTS sunbird.course_batch(id text, courseId text,courseCreator text,createdBy text,createdDate text,enrollmentType text,startDate text,endDate text,
name text,description text,status int,updatedDate text,mentors List<text>,participant map<text,boolean>,createdFor List<text>,
courseAdditionalInfo map<text,text>,countIncrementStatus boolean,countIncrementDate text,countDecrementStatus boolean,countDecrementDate text,hashTagId text,PRIMARY KEY (id));
CREATE INDEX inx_cou_bat_status ON sunbird.course_batch (status); 
CREATE INDEX inx_cou_bat_courseId ON sunbird.course_batch (courseId);     
CREATE INDEX inx_cou_bat_courseCreator ON sunbird.course_batch (courseCreator); 
CREATE INDEX inx_cou_bat_createdBy ON sunbird.course_batch (createdBy); 
CREATE INDEX inx_cou_bat_enrolmentType ON sunbird.course_batch (enrollmentType); 
CREATE TABLE IF NOT EXISTS sunbird.course_publish_status(id text,submitDate text,status int,PRIMARY KEY (id));
ALTER TABLE sunbird.content_consumption ADD batchId text;

CREATE TABLE IF NOT EXISTS sunbird.bulk_upload_process(id text, status int,data text,successResult text,failureResult text,uploadedBy text,uploadedDate text,processStartTime text,processEndTime text,ObjectType text,organisationId text,retryCount int,PRIMARY KEY (id));
CREATE INDEX inx_status ON sunbird.bulk_upload_process(status);

CREATE INDEX inx_cps_status ON sunbird.course_publish_status (status);
CREATE TABLE IF NOT EXISTS sunbird.badge(id text, name text, description text, isActive boolean, PRIMARY KEY (id));
CREATE TABLE IF NOT EXISTS sunbird.user_badge(id text, createdDate text, createdBy text, updatedDate text,updatedBy text,badgeTypeId text,receivedDate text,receiverId text,providerId text,providerName text,providerEmail text,providerPhone text,description text,validityDate int,expiryDate text,image text,isVerified boolean,isExpired boolean,isRevoked boolean,revocationReason text,revocationDate text,revokedBy text,verifiedBy text,verifiedDate text ,PRIMARY KEY (id));
 CREATE INDEX inx_usr_badg ON sunbird.user_badge (badgeTypeId);
 insert into sunbird.badge (id,name,description,isactive) values ('0123206539020943360','President''s Gold Medal','Gold medal provided by President',true);
 CREATE INDEX inx_usr_badg_receiverid ON sunbird.user_badge (receiverid);

CREATE TABLE IF NOT EXISTS sunbird.report_tracking(id text, status int,type text,createdDate text,userId text,uploadedDate text,email text,fileUrl text,tryCount int, 
firstName text,resourceId text,period text,data text,updatedDate text,format text,PRIMARY KEY (id));
CREATE INDEX inx_report_tracking_status ON sunbird.report_tracking(status);
CREATE INDEX inx_report_tracking_userId ON sunbird.report_tracking(userId);

CREATE TABLE IF NOT EXISTS sunbird.user_notes(id text, userId text, courseId text, 
contentId text, title text, note text, tags list<text>, createdDate text, createdBy text, 
updatedDate text, updatedBy text, isDeleted boolean, PRIMARY KEY (id));
CREATE INDEX inx_un_userId ON sunbird.user_notes(userId);
CREATE INDEX inx_un_courseId ON sunbird.user_notes(courseId);
CREATE INDEX inx_un_contentId ON sunbird.user_notes(contentId);
CREATE TABLE IF NOT EXISTS sunbird.media_type(id text, name text, PRIMARY KEY (id));

insert into media_type(id,name) values('fb', 'Facebook');
insert into media_type(id,name) values('twitter','Twitter');
insert into media_type(id,name) values('in','LinkedIn');
insert into media_type(id,name) values('blog','Blog');
/**
creation of id = one way hash of (userId##skillnametolowercase)
**/
CREATE TABLE IF NOT EXISTS sunbird.user_skills(id text, userId  text, skillname text,skillnametolowercase text, addedby text, addedat text, endorsementcount int 
,endorsersList frozen<List<Map<text , text>>>, PRIMARY KEY (id));
CREATE INDEX inx_us_userId ON sunbird.user_skills(userId);
/**
creation of id = one way hash of (userId##skillnametolowercase)
**/
CREATE TABLE IF NOT EXISTS sunbird.skills(id text,skills list<text>, PRIMARY KEY (id));

CREATE KEYSPACE IF NOT EXISTS sunbirdplugin WITH replication = {'class':'SimpleStrategy','replication_factor':1};
CREATE TYPE IF NOT EXISTS sunbirdplugin.attachment (id text,filename text,mimetype text);
CREATE TABLE sunbirdplugin.announcement (id text,userid text,sourceid text,details map<text, text>,links list<text>,attachments list<text>,target text,sentcount int,priority text,expiry text,status text,createddate text,updateddate text, PRIMARY KEY (id));
CREATE TABLE sunbirdplugin.attachment (id text,file text,filename text,mimetype text,createdby text,status text,createddate text, PRIMARY KEY (id));
CREATE TABLE sunbirdplugin.metrics (id text,userid text,announcementid text,activity text,channel text,createddate text, PRIMARY KEY (id));
CREATE TABLE sunbirdplugin.announcementtype (id text,rootorgid text,name text,status text,createddate text, PRIMARY KEY (id));
CREATE TABLE sunbirdplugin.announcementauth (id text,userid text,rootorgid text,permissions map<text, text>,status text,createddate text, PRIMARY KEY (id));
CREATE TABLE IF NOT EXISTS sunbird.tenant_preference(id text,tenantName text,orgId text,role text, data text, PRIMARY KEY (id));
CREATE INDEX inx_tp_userId ON sunbird.tenant_preference(orgId);

CREATE TABLE IF NOT EXISTS sunbird.client_info(id text, clientname text, masterkey text, createddate text, updateddate text,channel text, PRIMARY KEY (id));
CREATE INDEX inx_ci_clientname ON sunbird.client_info(clientname);
CREATE INDEX inx_ci_clientchannel ON sunbird.client_info(channel);

CREATE TABLE IF NOT EXISTS sunbird.geo_location(id text,location text,rootOrgId text,type text, createdDate  text,createdBy text,updatedDate text,updatedBy text,
userCountTTL text,topic text,userCount int,PRIMARY KEY (id));
CREATE INDEX inx_gl_rootOrgId ON sunbird.geo_location(rootOrgId);

ALTER TABLE sunbirdplugin.announcement DROP target ;
ALTER TABLE sunbirdplugin.announcement ADD target map<text, frozen<map<text ,frozen<list<text>>>>>;

insert into skills (id,skills) values ('001',['java']);

CREATE TABLE IF NOT EXISTS sunbird.system_settings (id text ,field text ,value text ,PRIMARY KEY (id));
insert into sunbird.system_settings (id,field,value) values ('phoneUnique','phoneUnique','false');
insert into sunbird.system_settings (id,field,value) values ('emailUnique','emailUnique','false');